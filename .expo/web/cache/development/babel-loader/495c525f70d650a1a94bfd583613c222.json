{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useReducer } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { borderColor } from 'react-native/Libraries/Components/View/ReactNativeStyleAttributes';\nimport get_product from \"../data/get_product.json\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar reducer = function reducer(state, action) {\n  switch (action.type) {\n    case 'increment':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        count: state.count + action.payload\n      });\n\n    case 'decrement':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        count: state.count - action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar ProductScreen = function ProductScreen() {\n  var _useReducer = useReducer(reducer, {\n    count: 0\n  }),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  return _jsx(ImageBackground, {\n    blurRadius: 10,\n    style: styles.background,\n    source: require(\"../assets/kfc.png\"),\n    children: _jsxs(View, {\n      style: {\n        flex: 1,\n        flexDirection: 'column',\n        width: 380\n      },\n      children: [_jsx(Text, {\n        children: \"Recommended Items\"\n      }), _jsx(FlatList, {\n        data: get_product,\n        showsVerticalScrollIndicator: false,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return _jsxs(View, {\n            children: [_jsx(Text, {\n              children: item.product_name\n            }), _jsx(Image, {\n              source: {\n                uri: item.product_image\n              },\n              style: styles.imageView\n            }), _jsx(Text, {\n              children: item.shop_name\n            }), _jsx(Button, {\n              style: styles.button,\n              title: \"+\",\n              onPress: function onPress() {\n                dispatch({\n                  type: 'increment',\n                  payload: 1\n                });\n              }\n            }), _jsx(Button, {\n              style: styles.button,\n              title: \"-\",\n              onPress: function onPress() {\n                dispatch({\n                  type: 'decrement',\n                  payload: 1\n                });\n              }\n            })]\n          });\n        },\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        }\n      }), _jsxs(Text, {\n        children: [\"Total Cart: \", state.count]\n      })]\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  imageView: {\n    margin: 15,\n    borderColor: 'black',\n    borderWidth: 1,\n    height: 200\n  },\n  background: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    alignItems: \"center\"\n  }\n});\nexport default ProductScreen;","map":{"version":3,"sources":["C:/Users/Abishek/ShoppingCartTask/app/screens/ProductScreen.js"],"names":["React","useReducer","borderColor","get_product","reducer","state","action","type","count","payload","ProductScreen","dispatch","styles","background","require","flex","flexDirection","width","item","product_name","uri","product_image","imageView","shop_name","button","index","toString","StyleSheet","create","margin","borderWidth","height","justifyContent","alignItems"],"mappings":"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","sourcesContent":["// 1st add name\r\n// import React, { Component } from 'react';\r\n// import { View, Text, FlatList} from 'react-native';\r\n// import { ImageBackground } from 'react-native-web';\r\n// import get_product from '../data/get_product.json';\r\n\r\n// class ProductScreen extends Component {\r\n//   render() {\r\n//     return (\r\n//         <View style={{flex: 1, flexDirection: 'column'}}>\r\n//            <Text >\r\n//              Student List\r\n//            </Text>\r\n//            <FlatList\r\n//              data={get_product}\r\n//              showsVerticalScrollIndicator={false}\r\n//              renderItem={({item}) =>\r\n//                 <View >\r\n//                  <Text>{item.product_name}</Text>\r\n//                 </View>\r\n//              }\r\n//              keyExtractor={(item, index) => index.toString()}\r\n//            />\r\n//         </View>\r\n//      );\r\n//   }\r\n// }\r\n\r\n// export default ProductScreen;\r\n\r\n//add image\r\n// import React, { Component } from 'react';\r\n// import { View, Text, FlatList, Image, StyleSheet} from 'react-native';\r\n\r\n// import get_product from '../data/get_product.json';\r\n\r\n// class ProductScreen extends Component {\r\n//   render() {\r\n//     return (\r\n//         <View style={{flex: 1, flexDirection: 'column'}}>\r\n//            <Text >\r\n//              Items\r\n//            </Text>\r\n//            <FlatList\r\n//              data={get_product}\r\n//              showsVerticalScrollIndicator={false}\r\n//              renderItem={({item}) =>\r\n//                 <View >\r\n//                  <Text>{item.product_name}</Text>\r\n//                  <Image source={ {uri: item.product_image}} style = {styles.imageView}/>\r\n                \r\n//                  {/* <Image source={ {uri: item.service_image}} style = {styles.imageView}/> */}\r\n//                  {/* <Text>{item.service_name } </Text>\r\n//                  <Text>{item.category_name}</Text> */}\r\n//                  <Text>{item.shop_name}</Text>\r\n\r\n                 \r\n     \r\n//                 </View>\r\n//              }\r\n//              keyExtractor={(item, index) => index.toString()}\r\n//            />\r\n//         </View>\r\n//      );\r\n//   }\r\n// }\r\n// const styles = StyleSheet.create({\r\n//     imageView: {\r\n//         margin: 15,\r\n//         borderColor: 'black',\r\n//         borderWidth: 1,\r\n//         height:200\r\n//       }\r\n// });\r\n\r\n\r\n// export default ProductScreen;\r\n\r\n//add button\r\n// import React, { Component } from 'react';\r\n// import { View, Text, FlatList, Image, StyleSheet, Button} from 'react-native';\r\n\r\n// class ProductScreen extends Component {\r\n    \r\n//   render() {\r\n//     return (\r\n//         <View style={{flex: 1, flexDirection: 'column'}}>\r\n//            <Text >\r\n//              Recommended Items\r\n//            </Text>\r\n//            <FlatList\r\n//              data={get_product}\r\n//              showsVerticalScrollIndicator={false}\r\n//              renderItem={({item}) =>\r\n//                 <View >\r\n//                  <Text>{item.product_name}</Text>\r\n//                  <Image source={ {uri: item.product_image}} style = {styles.imageView}/>\r\n                \r\n//                  {/* <Image source={ {uri: item.service_image}} style = {styles.imageView}/> */}\r\n//                  {/* <Text>{item.service_name } </Text>\r\n//                  <Text>{item.category_name}</Text> */}\r\n//                  <Text>{item.shop_name}</Text>\r\n               \r\n\r\n//                  <Button style={styles.button}\r\n//                     title=\"+\"\r\n//                     onPress={() => {\r\n//                     dispatch({ type: 'increment', payload: 1 });\r\n//                    }}\r\n//                 />\r\n//                 <Button style={styles.button}\r\n//                    title=\"-\"\r\n//                    onPress={() => {\r\n//                    dispatch({ type: 'decrement', payload: 1 });\r\n//                   }}\r\n//                 />\r\n\r\n    \r\n     \r\n//                 </View>\r\n//              }\r\n//              keyExtractor={(item, index) => index.toString()}\r\n//            />\r\n//         </View>\r\n//      );\r\n//   }\r\n// }\r\n// const styles = StyleSheet.create({\r\n//     imageView: {\r\n//         margin: 15,\r\n//         borderColor: 'black',\r\n//         borderWidth: 1,\r\n//         height:200\r\n//       }\r\n// });\r\n\r\n\r\n// export default ProductScreen;\r\n\r\n//3rd add count in button press\r\nimport React, { useReducer } from 'react';\r\nimport { View, Text, FlatList, Image, StyleSheet, Button, ImageBackground} from 'react-native';\r\nimport { borderColor } from 'react-native/Libraries/Components/View/ReactNativeStyleAttributes';\r\n\r\nimport get_product from '../data/get_product.json';\r\n\r\nconst reducer = (state, action) => {\r\n    // state === { count: number }\r\n    // action === { type: 'increment' || 'decrement', payload: 1 }\r\n  \r\n    switch (action.type) {\r\n      case 'increment':\r\n        return { ...state, count: state.count + action.payload };\r\n      case 'decrement':\r\n        return { ...state, count: state.count - action.payload };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\nconst ProductScreen = () => {\r\n  const [state, dispatch] = useReducer(reducer, { count: 0 });\r\n\r\n// class ProductScreen extends Component {   \r\n  // render() {\r\n    \r\n    return (\r\n      <ImageBackground\r\n      blurRadius={10}\r\n\r\n      style={styles.background}\r\n          source={require(\"../assets/kfc.png\")}>\r\n      \r\n        <View style={{flex: 1, flexDirection: 'column',width:380}}>\r\n         \r\n           <Text >\r\n             Recommended Items\r\n           </Text>\r\n           <FlatList\r\n             data={get_product}\r\n             showsVerticalScrollIndicator={false}\r\n             renderItem={({item}) =>\r\n                <View >\r\n                 <Text>{item.product_name}</Text>\r\n                 <Image source={ {uri: item.product_image}} style = {styles.imageView}/>\r\n                \r\n                 {/* <Image source={ {uri: item.service_image}} style = {styles.imageView}/> */}\r\n                 {/* <Text>{item.service_name } </Text>\r\n                 <Text>{item.category_name}</Text> */}\r\n                 <Text>{item.shop_name}</Text>\r\n               \r\n\r\n                 <Button style={styles.button}\r\n                    title=\"+\"\r\n                    onPress={() => {\r\n                    dispatch({ type: 'increment', payload: 1 });\r\n                   }}\r\n                />\r\n                \r\n                <Button style={styles.button}\r\n                   title=\"-\"\r\n                   onPress={() => {\r\n                   dispatch({ type: 'decrement', payload: 1 });\r\n                  }}\r\n                />\r\n                    \r\n                </View>\r\n                \r\n             }\r\n             keyExtractor={(item, index) => index.toString()}\r\n           />\r\n                <Text>Total Cart: {state.count}</Text>\r\n        </View>\r\n        </ImageBackground>\r\n     );\r\n     \r\n  }\r\n//}\r\nconst styles = StyleSheet.create({\r\n    imageView: {\r\n        margin: 15,\r\n        borderColor: 'black',\r\n        borderWidth: 1,\r\n        height:200\r\n      },\r\n      background: {\r\n        flex: 1,\r\n        justifyContent: 'flex-end',\r\n        alignItems: \"center\",\r\n    },\r\n});\r\n\r\n\r\nexport default ProductScreen;"]},"metadata":{},"sourceType":"module"}