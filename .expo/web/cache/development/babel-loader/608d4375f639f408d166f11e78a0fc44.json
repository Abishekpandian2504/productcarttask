{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useReducer } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar reducer = function reducer(state, action) {\n  switch (action.type) {\n    case 'increment':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        count: state.count + action.payload\n      });\n\n    case 'decrement':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        count: state.count - action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar OrderScreen = function OrderScreen() {\n  var _useReducer = useReducer(reducer, {\n    count: 0\n  }),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  return _jsxs(View, {\n    children: [_jsx(Button, {\n      title: \"Increase\",\n      onPress: function onPress() {\n        dispatch({\n          type: 'increment',\n          payload: 1\n        });\n      }\n    }), _jsx(Button, {\n      title: \"Decrease\",\n      onPress: function onPress() {\n        dispatch({\n          type: 'decrement',\n          payload: 1\n        });\n      }\n    }), _jsxs(Text, {\n      children: [\"Current Count: \", state.count]\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({});\nexport default OrderScreen;","map":{"version":3,"sources":["C:/Users/Abishek/ShoppingCartTask/app/screens/OrderScreen.js"],"names":["React","useReducer","reducer","state","action","type","count","payload","OrderScreen","dispatch","styles","StyleSheet","create"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;;;;;;;;AAGA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAQC,MAAR,EAAmB;AAIjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,WAAL;AACE,6CAAYF,KAAZ;AAAmBG,QAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,GAAcF,MAAM,CAACG;AAA/C;;AACF,SAAK,WAAL;AACE,6CAAYJ,KAAZ;AAAmBG,QAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,GAAcF,MAAM,CAACG;AAA/C;;AACF;AACE,aAAOJ,KAAP;AANJ;AAQD,CAZD;;AAaA,IAAMK,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,oBAA0BP,UAAU,CAACC,OAAD,EAAU;AAAEI,IAAAA,KAAK,EAAE;AAAT,GAAV,CAApC;AAAA;AAAA,MAAOH,KAAP;AAAA,MAAcM,QAAd;;AAEA,SACE,MAAC,IAAD;AAAA,eAEE,KAAC,MAAD;AACE,MAAA,KAAK,EAAC,UADR;AAEE,MAAA,OAAO,EAAE,mBAAM;AACbA,QAAAA,QAAQ,CAAC;AAAEJ,UAAAA,IAAI,EAAE,WAAR;AAAqBE,UAAAA,OAAO,EAAE;AAA9B,SAAD,CAAR;AACD;AAJH,MAFF,EAQE,KAAC,MAAD;AACE,MAAA,KAAK,EAAC,UADR;AAEE,MAAA,OAAO,EAAE,mBAAM;AACbE,QAAAA,QAAQ,CAAC;AAAEJ,UAAAA,IAAI,EAAE,WAAR;AAAqBE,UAAAA,OAAO,EAAE;AAA9B,SAAD,CAAR;AACD;AAJH,MARF,EAcE,MAAC,IAAD;AAAA,oCAAsBJ,KAAK,CAACG,KAA5B;AAAA,MAdF;AAAA,IADF;AAkBD,CArBD;;AAuBA,IAAMI,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf;AAEA,eAAeJ,WAAf","sourcesContent":["import React, { useReducer } from 'react';\r\nimport { View, Text, Image, StyleSheet, Button } from 'react-native';\r\n\r\nconst reducer = (state, action) => {\r\n  // state === { count: number }\r\n  // action === { type: 'increment' || 'decrement', payload: 1 }\r\n\r\n  switch (action.type) {\r\n    case 'increment':\r\n      return { ...state, count: state.count + action.payload };\r\n    case 'decrement':\r\n      return { ...state, count: state.count - action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nconst OrderScreen = () => {\r\n  const [state, dispatch] = useReducer(reducer, { count: 0 });\r\n\r\n  return (\r\n    <View>\r\n      {/* <Image source={require('../assets/chickenbuurger.jp')} /> */}\r\n      <Button\r\n        title=\"Increase\"\r\n        onPress={() => {\r\n          dispatch({ type: 'increment', payload: 1 });\r\n        }}\r\n      />\r\n      <Button\r\n        title=\"Decrease\"\r\n        onPress={() => {\r\n          dispatch({ type: 'decrement', payload: 1 });\r\n        }}\r\n      />\r\n      <Text>Current Count: {state.count}</Text>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({});\r\n\r\nexport default OrderScreen;\r\n"]},"metadata":{},"sourceType":"module"}