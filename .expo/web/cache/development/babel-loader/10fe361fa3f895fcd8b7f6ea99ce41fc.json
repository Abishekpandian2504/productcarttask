{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useReducer } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport get_product from \"../data/get_product.json\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar reducer = function reducer(state, action) {\n  switch (action.type) {\n    case 'increment':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        count: state.count + action.payload\n      });\n\n    case 'decrement':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        count: state.count - action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar ProductScreen = function ProductScreen() {\n  var _useReducer = useReducer(reducer, {\n    count: 0\n  }),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      flexDirection: 'column'\n    },\n    children: [_jsx(Text, {\n      children: \"Recommended Items\"\n    }), _jsx(FlatList, {\n      data: get_product,\n      showsVerticalScrollIndicator: false,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsxs(View, {\n          children: [_jsx(Text, {\n            children: item.product_name\n          }), _jsx(Image, {\n            source: {\n              uri: item.product_image\n            },\n            style: styles.imageView\n          }), _jsx(Text, {\n            children: item.shop_name\n          }), _jsx(Button, {\n            style: styles.button,\n            title: \"+\",\n            onPress: function onPress() {\n              dispatch({\n                type: 'increment',\n                payload: 1\n              });\n            }\n          }), _jsx(Button, {\n            style: styles.button,\n            title: \"-\",\n            onPress: function onPress() {\n              dispatch({\n                type: 'decrement',\n                payload: 1\n              });\n            }\n          })]\n        });\n      },\n      keyExtractor: function keyExtractor(item, index) {\n        return index.toString();\n      }\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  imageView: {\n    margin: 15,\n    borderColor: 'black',\n    borderWidth: 1,\n    height: 200\n  }\n});\nexport default ProductScreen;","map":{"version":3,"sources":["C:/Users/Abishek/ShoppingCartTask/app/screens/ProductScreen.js"],"names":["React","useReducer","get_product","reducer","state","action","type","count","payload","ProductScreen","dispatch","flex","flexDirection","item","product_name","uri","product_image","styles","imageView","shop_name","button","index","toString","StyleSheet","create","margin","borderColor","borderWidth","height"],"mappings":";;;;;;;AA4IA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;;;;;;AAGA,OAAOC,WAAP;;;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAQC,MAAR,EAAmB;AAI/B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,WAAL;AACE,6CAAYF,KAAZ;AAAmBG,QAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,GAAcF,MAAM,CAACG;AAA/C;;AACF,SAAK,WAAL;AACE,6CAAYJ,KAAZ;AAAmBG,QAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,GAAcF,MAAM,CAACG;AAA/C;;AACF;AACE,aAAOJ,KAAP;AANJ;AAQD,CAZH;;AAcA,IAAMK,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,oBAA0BR,UAAU,CAACE,OAAD,EAAU;AAAEI,IAAAA,KAAK,EAAE;AAAT,GAAV,CAApC;AAAA;AAAA,MAAOH,KAAP;AAAA,MAAcM,QAAd;;AAIE,SACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,IAAI,EAAE,CAAP;AAAUC,MAAAA,aAAa,EAAE;AAAzB,KAAb;AAAA,eACG,KAAC,IAAD;AAAA;AAAA,MADH,EAIG,KAAC,QAAD;AACE,MAAA,IAAI,EAAEV,WADR;AAEE,MAAA,4BAA4B,EAAE,KAFhC;AAGE,MAAA,UAAU,EAAE;AAAA,YAAEW,IAAF,QAAEA,IAAF;AAAA,eACT,MAAC,IAAD;AAAA,qBACC,KAAC,IAAD;AAAA,sBAAOA,IAAI,CAACC;AAAZ,YADD,EAEC,KAAC,KAAD;AAAO,YAAA,MAAM,EAAG;AAACC,cAAAA,GAAG,EAAEF,IAAI,CAACG;AAAX,aAAhB;AAA2C,YAAA,KAAK,EAAIC,MAAM,CAACC;AAA3D,YAFD,EAOC,KAAC,IAAD;AAAA,sBAAOL,IAAI,CAACM;AAAZ,YAPD,EAUC,KAAC,MAAD;AAAQ,YAAA,KAAK,EAAEF,MAAM,CAACG,MAAtB;AACG,YAAA,KAAK,EAAC,GADT;AAEG,YAAA,OAAO,EAAE,mBAAM;AACfV,cAAAA,QAAQ,CAAC;AAAEJ,gBAAAA,IAAI,EAAE,WAAR;AAAqBE,gBAAAA,OAAO,EAAE;AAA9B,eAAD,CAAR;AACA;AAJH,YAVD,EAgBA,KAAC,MAAD;AAAQ,YAAA,KAAK,EAAES,MAAM,CAACG,MAAtB;AACG,YAAA,KAAK,EAAC,GADT;AAEG,YAAA,OAAO,EAAE,mBAAM;AACfV,cAAAA,QAAQ,CAAC;AAAEJ,gBAAAA,IAAI,EAAE,WAAR;AAAqBE,gBAAAA,OAAO,EAAE;AAA9B,eAAD,CAAR;AACA;AAJH,YAhBA;AAAA,UADS;AAAA,OAHd;AA+BE,MAAA,YAAY,EAAE,sBAACK,IAAD,EAAOQ,KAAP;AAAA,eAAiBA,KAAK,CAACC,QAAN,EAAjB;AAAA;AA/BhB,MAJH;AAAA,IADJ;AAwCD,CA7CH;;AA+CA,IAAML,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC7BN,EAAAA,SAAS,EAAE;AACPO,IAAAA,MAAM,EAAE,EADD;AAEPC,IAAAA,WAAW,EAAE,OAFN;AAGPC,IAAAA,WAAW,EAAE,CAHN;AAIPC,IAAAA,MAAM,EAAC;AAJA;AADkB,CAAlB,CAAf;AAUA,eAAenB,aAAf","sourcesContent":["// 1st add name\r\n// import React, { Component } from 'react';\r\n// import { View, Text, FlatList} from 'react-native';\r\n// import { ImageBackground } from 'react-native-web';\r\n// import get_product from '../data/get_product.json';\r\n\r\n// class ProductScreen extends Component {\r\n//   render() {\r\n//     return (\r\n//         <View style={{flex: 1, flexDirection: 'column'}}>\r\n//            <Text >\r\n//              Student List\r\n//            </Text>\r\n//            <FlatList\r\n//              data={get_product}\r\n//              showsVerticalScrollIndicator={false}\r\n//              renderItem={({item}) =>\r\n//                 <View >\r\n//                  <Text>{item.product_name}</Text>\r\n//                 </View>\r\n//              }\r\n//              keyExtractor={(item, index) => index.toString()}\r\n//            />\r\n//         </View>\r\n//      );\r\n//   }\r\n// }\r\n\r\n// export default ProductScreen;\r\n\r\n//add image\r\n// import React, { Component } from 'react';\r\n// import { View, Text, FlatList, Image, StyleSheet} from 'react-native';\r\n\r\n// import get_product from '../data/get_product.json';\r\n\r\n// class ProductScreen extends Component {\r\n//   render() {\r\n//     return (\r\n//         <View style={{flex: 1, flexDirection: 'column'}}>\r\n//            <Text >\r\n//              Items\r\n//            </Text>\r\n//            <FlatList\r\n//              data={get_product}\r\n//              showsVerticalScrollIndicator={false}\r\n//              renderItem={({item}) =>\r\n//                 <View >\r\n//                  <Text>{item.product_name}</Text>\r\n//                  <Image source={ {uri: item.product_image}} style = {styles.imageView}/>\r\n                \r\n//                  {/* <Image source={ {uri: item.service_image}} style = {styles.imageView}/> */}\r\n//                  {/* <Text>{item.service_name } </Text>\r\n//                  <Text>{item.category_name}</Text> */}\r\n//                  <Text>{item.shop_name}</Text>\r\n\r\n                 \r\n     \r\n//                 </View>\r\n//              }\r\n//              keyExtractor={(item, index) => index.toString()}\r\n//            />\r\n//         </View>\r\n//      );\r\n//   }\r\n// }\r\n// const styles = StyleSheet.create({\r\n//     imageView: {\r\n//         margin: 15,\r\n//         borderColor: 'black',\r\n//         borderWidth: 1,\r\n//         height:200\r\n//       }\r\n// });\r\n\r\n\r\n// export default ProductScreen;\r\n\r\n//add button\r\n// import React, { Component } from 'react';\r\n// import { View, Text, FlatList, Image, StyleSheet, Button} from 'react-native';\r\n\r\n// class ProductScreen extends Component {\r\n    \r\n//   render() {\r\n//     return (\r\n//         <View style={{flex: 1, flexDirection: 'column'}}>\r\n//            <Text >\r\n//              Recommended Items\r\n//            </Text>\r\n//            <FlatList\r\n//              data={get_product}\r\n//              showsVerticalScrollIndicator={false}\r\n//              renderItem={({item}) =>\r\n//                 <View >\r\n//                  <Text>{item.product_name}</Text>\r\n//                  <Image source={ {uri: item.product_image}} style = {styles.imageView}/>\r\n                \r\n//                  {/* <Image source={ {uri: item.service_image}} style = {styles.imageView}/> */}\r\n//                  {/* <Text>{item.service_name } </Text>\r\n//                  <Text>{item.category_name}</Text> */}\r\n//                  <Text>{item.shop_name}</Text>\r\n               \r\n\r\n//                  <Button style={styles.button}\r\n//                     title=\"+\"\r\n//                     onPress={() => {\r\n//                     dispatch({ type: 'increment', payload: 1 });\r\n//                    }}\r\n//                 />\r\n//                 <Button style={styles.button}\r\n//                    title=\"-\"\r\n//                    onPress={() => {\r\n//                    dispatch({ type: 'decrement', payload: 1 });\r\n//                   }}\r\n//                 />\r\n\r\n    \r\n     \r\n//                 </View>\r\n//              }\r\n//              keyExtractor={(item, index) => index.toString()}\r\n//            />\r\n//         </View>\r\n//      );\r\n//   }\r\n// }\r\n// const styles = StyleSheet.create({\r\n//     imageView: {\r\n//         margin: 15,\r\n//         borderColor: 'black',\r\n//         borderWidth: 1,\r\n//         height:200\r\n//       }\r\n// });\r\n\r\n\r\n// export default ProductScreen;\r\n\r\n//3rd add count in button press\r\nimport React, { useReducer } from 'react';\r\nimport { View, Text, FlatList, Image, StyleSheet, Button} from 'react-native';\r\n\r\nimport get_product from '../data/get_product.json';\r\n\r\nconst reducer = (state, action) => {\r\n    // state === { count: number }\r\n    // action === { type: 'increment' || 'decrement', payload: 1 }\r\n  \r\n    switch (action.type) {\r\n      case 'increment':\r\n        return { ...state, count: state.count + action.payload };\r\n      case 'decrement':\r\n        return { ...state, count: state.count - action.payload };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\nconst ProductScreen = () => {\r\n  const [state, dispatch] = useReducer(reducer, { count: 0 });\r\n\r\n// class ProductScreen extends Component {   \r\n  // render() {\r\n    return (\r\n        <View style={{flex: 1, flexDirection: 'column'}}>\r\n           <Text >\r\n             Recommended Items\r\n           </Text>\r\n           <FlatList\r\n             data={get_product}\r\n             showsVerticalScrollIndicator={false}\r\n             renderItem={({item}) =>\r\n                <View >\r\n                 <Text>{item.product_name}</Text>\r\n                 <Image source={ {uri: item.product_image}} style = {styles.imageView}/>\r\n                \r\n                 {/* <Image source={ {uri: item.service_image}} style = {styles.imageView}/> */}\r\n                 {/* <Text>{item.service_name } </Text>\r\n                 <Text>{item.category_name}</Text> */}\r\n                 <Text>{item.shop_name}</Text>\r\n               \r\n\r\n                 <Button style={styles.button}\r\n                    title=\"+\"\r\n                    onPress={() => {\r\n                    dispatch({ type: 'increment', payload: 1 });\r\n                   }}\r\n                />\r\n                <Button style={styles.button}\r\n                   title=\"-\"\r\n                   onPress={() => {\r\n                   dispatch({ type: 'decrement', payload: 1 });\r\n                  }}\r\n                />\r\n\r\n    \r\n     \r\n                </View>\r\n             }\r\n             keyExtractor={(item, index) => index.toString()}\r\n           />\r\n        </View>\r\n     );\r\n  }\r\n//}\r\nconst styles = StyleSheet.create({\r\n    imageView: {\r\n        margin: 15,\r\n        borderColor: 'black',\r\n        borderWidth: 1,\r\n        height:200\r\n      }\r\n});\r\n\r\n\r\nexport default ProductScreen;"]},"metadata":{},"sourceType":"module"}